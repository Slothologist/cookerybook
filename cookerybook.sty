%% This is not a generated file.
%% Copyright (C) 2017 by Luca Michael Lach

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{cookerybook}[2017/08/15 v0.1 Clean Cookbook Style File]

% NOTES
% keeping aspect ratio of images with scaling https://tex.stackexchange.com/questions/25988/scale-included-graphics-to-the-higher-ratio-instead-of-the-lower-for-given-width

% TODO's
% twosided thing
% line under title
% recipes shall appear in the TOC
% add pictures
% fix table
% pass language argument, change hardcoded words respectively
% calorie calculation
% price calculation
% fix ü's
% what does cookery booky fucky do that pages look good? --> nothing. but make pages nicer
\RequirePackage{ifthen}
\RequirePackage{cookingsymbols}              % Cookings symbols e.g. \Oven, \Dish etc
\RequirePackage{fancyhdr}					 % Customizing header and footer
\RequirePackage{etoolbox}					 % Facilitates some macro definitions
\RequirePackage[utf8]{inputenc}   			 % Handle Umlaute correct by default
\RequirePackage{wrapfig}   			 		 % Allow wrapped tabulars
\RequirePackage{tabulary}   		 		 % Enhanced tabular
\RequirePackage[ngerman, english]{babel}     % Some language optimization stuff
\RequirePackage[export]{adjustbox}
\RequirePackage{tikz}
\RequirePackage{calc}

\RequirePackage{DejaVuSans}					 % Font sans serif
\renewcommand*\familydefault{\sfdefault} %% Only if the base font of the document is to be sans serif
\RequirePackage{lmodern}					 % Makes fonts look nicer. Has to be set after font is chosen.

% Some page formatting
\setlength{\parindent}{0cm}
\setlength{\parskip}{2ex plus 0.5ex}

\setlength{\textwidth}{15.5cm}
\setlength{\textheight}{24.0cm}
\setlength{\topmargin}{-0.8cm}
\setlength{\headheight}{14pt} %0cm
\setlength{\headsep}{1cm}
\setlength{\topskip}{0cm}
\setlength{\footskip}{1.4cm}
\setlength{\evensidemargin}{-0.5cm}
\setlength{\oddsidemargin}{0.5cm}
\setlength{\voffset}{0cm}
\setlength{\hoffset}{0cm}
\setcounter{secnumdepth}{2} % subsubsections not numbered
\setcounter{tocdepth}{3}    % subsubsections in the .toc file


\DeclareRobustCommand{\textcelcius}{\ensuremath{^{\circ}\mathrm{C}}}

\newcommand{\rectangle}[2]{{% #1 = width, #2 = height
		\fboxsep=-\fboxrule\sbox0{}\wd0=#1\ht0=#2\relax\fbox{\box0}}}

\newcommand{\rectangleplus}[3]{\tikz \fill[#3] (0,0) rectangle (#1,#2);}

\pagenumbering{gobble}						 % Remove pagenumbering before TOC

\let\oldtoc\tableofcontents  % Let another commandname point to \toc, so it can be used while redefining itself
\renewcommand{\tableofcontents}
{% Roman pagenumbering in TOC, arabic starting after TOC is drawn
	\clearpage
	\pagenumbering{Roman}
	\oldtoc
	\clearpage % If page is not cleared, arabic pagenumbering will start on last TOC page
	\pagenumbering{arabic}
}

\newcounter{ingredientsCounter}
\newcounter{spicesCounter}
\newboolean{useTitleImage}

\newenvironment{cleanrecipe}[1]
{% This will be executed at \begin{cleanrecipe}
		
		% Reset counters and booleans.
		\setcounter{ingredientsCounter}{0}
		\setcounter{spicesCounter}{0}
		\setboolean{useTitleImage}{false}
		
		% In this variable, the ingredientstable content will be saved.
		% It is initialized with the ingredients headline, depending on the language setting.
		\def\ingredientsContent{& \textbf{Zutaten} }
		\def\spicesContent{& \textbf{Gew\"urze} }
		
		% This command adds an already formatted entry to the ingredient
		\newcommand{\addIngredient}[1]{
			\addtocounter{ingredientsCounter}{1}
			\appto\ingredientsContent{ \\ & ##1  } % Double Hashtags are neccessary to distinguish nested parameter 
		}
		\newcommand{\addSpice}[1]{
			\addtocounter{spicesCounter}{1}
			\appto\spicesContent{ \\ & ##1  } % Double Hashtags are neccessary to distinguish nested parameter 
		}
		
		% The following commands take care of formatting the ingridient text.
		% They also pass optional calorie and price things down to the correct macros.
		\newcommand{\g}[2]{\addIngredient{\textbf{##1g} ##2}}
		\newcommand{\kg}[2]{\addIngredient{\textbf{##1kg} ##2}}
		\newcommand{\ml}[2]{\addIngredient{\textbf{##1ml} ##2}}
		\newcommand{\liter}[2]{\addIngredient{\textbf{##1l} ##2}}
		\newcommand{\tsp}[2]{\addIngredient{\textbf{##1 TL} ##2}}
		\newcommand{\tbsp}[2]{\addIngredient{\textbf{##1 EL} ##2}}
		\newcommand{\unitless}[2]{\addIngredient{\textbf{##1} ##2}}
		
		\newcommand{\spicesg}[2]{\addSpice{\textbf{##1g} ##2}}
		\newcommand{\spiceskg}[2]{\addSpice{\textbf{##1kg} ##2}}
		\newcommand{\spicesml}[2]{\addSpice{\textbf{##1ml} ##2}}
		\newcommand{\spicesliter}[2]{\addSpice{\textbf{##1l} ##2}}
		\newcommand{\spicestsp}[2]{\addSpice{\textbf{##1 TL} ##2}}
		\newcommand{\spicestbsp}[2]{\addSpice{\textbf{##1 EL} ##2}}
		\newcommand{\spicesunitless}[2]{\addSpice{\textbf{##1} ##2}}
		
		\def\titleImagePath{}
		\newcommand{\setTitleImage}[1]{
			\appto\titleImagePath{##1}
			\setboolean{useTitleImage}{true}
			}
		
		% A little hacky and ugly title.
		\begin{center}
			\Large\textbf{#1}\normalsize
		\end{center}
}
{% This will be executed at \end{cleanrecipe}
	
	% Will be set if an ingredient / spices table must be printed.
	\newboolean{useTable}
	
	% Evaluates which parts are set and therefore need to be printed.
	\ifnum\value{ingredientsCounter}>0
		\ifnum\value{spicesCounter}>0
			\def\tableContent{
				\ingredientsContent
				\\ \\
				\spicesContent}
			\setboolean{useTable}{true} 
		\else
			\def\tableContent{
				\ingredientsContent}
			\setboolean{useTable}{true} 
		\fi
	\else
		\ifnum\value{spicesCounter}>0
			\def\tableContent{
				\spicesContent}
			\setboolean{useTable}{true}
		\fi
	\fi
	
	% Only show table if it has content.
	\ifthenelse{\boolean{useTable}}{
		\begin{wraptable}{r}{5.5cm}
			\begin{tabulary}{5.5cm}{rL}
				\tableContent
			\end{tabulary}
		\end{wraptable}		
	}{} 
	
	% May not be neccessary if we allow half-sided recipes.
	\clearpage
}


\endinput   % must be the last command in a .sty
%eof
